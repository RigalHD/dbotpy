import sqlite3
from typing import Optional
import disnake
from disnake.ext import commands
from disnake import TextInputStyle
from disnake.interactions import MessageInteraction
# from Dbotclasses import OffersModal

bot = commands.Bot(command_prefix="!!", help_command=None, activity=disnake.Game("–ì—Ä–∏–±–Ω—É—é –ü–∞—Ä—Ç–∏—é"),intents=disnake.Intents.all(), status=disnake.Status.idle)

cens_words = ["rtest", "hellowein", "—Ç–∞—Ä–∞–∫–∞–Ω", "—Ö—É–π", "—Ö—É–π", "x—É–π", "xy–π", "—Öy–π", "hui", "brook"]
#specialcens_words = ["brook"]


@bot.event
async def on_ready():
    print(f"Bot {bot.user} is ready to work!")
    

# @bot.event
# async def on_member_join(member):
#     #role = await disnake.utils.get(member.guild.roles, id=1090000650512912414) 
#     channel = bot.get_channel(1051049678285840386) #member.guild.system_channel

#     embed = disnake.Embed(
#         title="–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!", 
#         description=f"{member.name}#{member.discriminator}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
#         color=0x00ff5e
#     )
    
#     #await member.add_roles(role)
#     await channel.send(embed=embed)

@bot.event
async def on_message(message):
    await bot.process_commands(message)
    for content in message.content.split():
        for cens_word in cens_words:
            if content.lower() == "brook":
                await message.delete()
                await message.channel.send(f"–±—Ä—É–∫ –ª–æ—Ö")
            elif content.lower() == cens_word:
                await message.delete()
                await message.channel.send(f"**–ö–∞–∫ —Ç–µ–±–µ –Ω–µ —Å—Ç—ã–¥–Ω–æ, **{message.author.mention}?")

# @bot.event
# async def on_command_error(inter, error):
#     print(error)

#     if isinstance(error, commands.MissingPermissions):
#         await inter.send(f"{inter.author}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤")
#     elif isinstance(error, commands.UserInputError):
        # await inter.send(embed=disnake.Embed(
        #     title="–ö–∞–∫ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É *–ø—Ä–∞–≤–∏–ª—å–Ω–æ?*",
        #     description=f" '{inter.prefix}{inter.command.name}' Example: /kick @klauncher –∑–∞–∫–æ–ª–µ–±–∞–ª",
        #     color=0x0066ff 
#         ))

@bot.command(name="rmessage")
@commands.has_permissions(administrator=True)
async def rmessage(ctx, tl, ms):
    # l=a.split("/")
    await ctx.send(embed=disnake.Embed(
        title=tl,
        description=ms,
        color=0x00a2ff
    ))

@bot.slash_command()
@commands.has_permissions(administrator=True)
async def rkick(inter, member: disnake.Member, *, reason="–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª."):
    await inter.send(f"—á–µ–ª–∞ {member.mention} –∫–∏–∫–Ω—É–ª {inter.author.mention}", delete_after=5) 
    await member.kick(reason=reason)
    await inter.message.delete()

@bot.slash_command()
async def calc(inter, a: int, oper: str, b: int):
    if oper == "+":
        result = a + b
    elif oper == "-":
        result = a - b
    elif oper == "*" or oper == "x":
        result = a * b
    elif oper == "/" or oper == ":":
        result = a / b
    else:
        result = "–Ω–µ—Ç"

    await inter.send(str(result))

@bot.slash_command(description="–†–∞—Å—Å—á–∏—Ç–∞–µ—Ç –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –∞–¥—É")
async def ncalc(inter, x: int, z: int):
    x_nether = round(x / 8)
    z_nether = round(z / 8)
    result = ("x = ", x_nether, "z = ", z_nether) 

    await inter.send(embed=disnake.Embed(
        title="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –∞–¥—É:",
        description=result,
        color=0x0066ff
    ))

@bot.slash_command(guild_ids=[1097125882876923954], name = "embed")
@commands.has_permissions(administrator=True)
async def embed(ctx, name, description, color, channel):
    
    channel2 = bot.get_channel(int(channel))
    if color.lower() == "—Å–∏–Ω–∏–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0x00a2ff
    )
        
    elif color.lower() == "–∫—Ä–∞—Å–Ω—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0xff0000
    )
        
    elif color.lower() == "–∑–µ–ª—ë–Ω—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0x135c19
    )
        
    elif color.lower() == "–∂—ë–ª—Ç—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0xffff00
    )
    
    elif color.lower() == "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0x8400ff
    )
    
    elif color.lower() == "—á—ë—Ä–Ω—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0x000000
    )
    
    elif color.lower() == "–±–µ–ª—ã–π":
        embed2=disnake.Embed(
        title=name,
        description=description,
        color=0xffffff
    )
    
    await channel2.send(embed=embed2)

# @bot.slash_command()
# @commands.has_permissions(administrator=True)
# async def sent(inter, messag, c_id):
#     channelg = bot.get_channel(int(c_id))
#     await channelg.send(messag)


@bot.slash_command(guild_ids=[1097125882876923954], name = "fullembed")
@commands.has_permissions(administrator=True)
async def fullembed(ctx, name, description, embedauthor, iconauthorurl, authorurl, footertext, footericonurl, imageulr, channelid):
    channel = bot.get_channel(int(channelid))
    embedf=disnake.Embed(
        title=name,
        description=description,
        color=0x00a2ff,
    )
    embedf.set_author(
        name=embedauthor,
        url=authorurl,
        icon_url=iconauthorurl,
    )
    embedf.set_footer(
        text=footertext,
        icon_url=footericonurl,
    )
    embedf.set_image(url=imageulr)
    await channel.send(embed=embedf)

# @bot.slash_command()
# async def samck(inter):


@bot.slash_command(guild_ids=[1051049677207912468, 889494053345968198], name="–ø—Ä–æ–ø—É—Å–∫–∞", description="–°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π, —Å –¥–æ—Å—Ç—É–ø–æ–º –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –ì–ü")
async def propuski(inter):
    embedspisok =  disnake.Embed(
        title="–°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –ì–ü",
        description=(
        "**meljnichenko** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nStandPuch** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nHellowein** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nabjorka** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nthetopir** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nSas-Pido-ra-kin** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - —á–ª–µ–Ω –ì–ü  "
        "**\nmr_KLauncher** - –±–µ—Å—Å—Ä–æ—á–Ω–æ - –≤—ã–¥–∞–Ω–æ Standpuch  "
        "**\nz1mp1e** - –±–µ—Å—Å—Ä–æ—á–Ω—ã–π –ø—Ä–æ–ø—É—Å–∫ - –≤—ã–¥–∞–Ω–æ StandPuch "
        ),   
        color=0x00a2ff
        )
    await inter.send(embed=embedspisok)

# @bot.slash_command()
# async def kickvoice(ctx, member: disnake.Member):
#     await member.voice.channel.delete

@bot.slash_command(guild_ids=[1097125882876923954])
async def voicedel(ctx, voice):
    vchannel = bot.get_channel(int(voice))
    await vchannel.delete()

@bot.slash_command(guild_ids=[1097125882876923954])
async def roleget(ctx, newmember = disnake.Member, *, gildd, rle):
    gild = bot.get_guild(int(gildd))
    role = gild.get_role(int(rle))
    await newmember.add_roles(role)



@bot.slash_command()
async def ping(inter):
    await inter.response.send_message("–ü–æ–Ω–≥!")

@bot.slash_command(guild_ids=[1097125882876923954])
async def lscom(inter, titl, message, us):
    embedls = disnake.Embed(
        title=titl,
        description=message,
        color=0x00a2ff
    )

    user = bot.get_user(int(us))
    await user.send("üëÄ")
    await user.send(embed=embedls)

# @bot.slash_command(guild_ids=[1097125882876923954, 1084069446051704844], name = "–∑–∞—è–≤–∫–∞")
# async def newembed(inter: disnake.AppCmdInter):
#     """–ù–∞–ø–∏—à–∏ –∑–∞—è–≤–∫—É!"""
#     # global channelg, embedtitle
#     # embedtitle = mdwembedtitle
#     # global ctxus
#     # ctxus = inter.user.id
#     await inter.response.send_modal(modal=MyModal())



@bot.slash_command(description="–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥")
async def bottestping(ctx, rol: disnake.Role):
    await ctx.send(rol.id)

@bot.slash_command(description="–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞")
async def bottestroleinfo(ctx, member: disnake.Member, *, role: disnake.Role):
    # rle = disnake.Role(–∞–π–¥–∏ —Ä–æ–ª–∏) –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏
    await member.add_roles(role)

class OffersModal(disnake.ui.Modal):
    def __init__(self):
        components_offers = [
            disnake.ui.TextInput(
                label="–û–ø–∏—à–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                placeholder="–û–ø–∏—à–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ",
                custom_id="–æ–ø–∏—Å–∞–Ω–∏",
                style=TextInputStyle.paragraph,
                max_length=300,
            ),
            disnake.ui.TextInput(
                label="–û—Ü–µ–Ω–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                placeholder="?/10",
                custom_id="–æ—Ü–µ–Ω–∫–∞",
                style=TextInputStyle.short,
                max_length=300,
            ),
        ]
        super().__init__(
            title="Create Offer",
            custom_id="create_offer",
            components=components_offers,
        )

    # global offerwriter
    async def callback(self, inter: disnake.ModalInteraction):
        embed = disnake.Embed(
            title="–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
            description=(f"<@{offerwriter}> –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!"),
            color=0x8400ff
            )
        
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
        
        authorbot = bot.get_user(581348510830690344)

        await authorbot.send(embed=embed)
        await inter.response.send_message(f" <@{offerwriter}>, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", delete_after=5)


class OfferButton(disnake.ui.View): 

    def __init__(self):
        super().__init__(timeout=None)
        self.value = Optional[bool]

    @disnake.ui.button(label="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å", style=disnake.ButtonStyle.green, emoji="‚úçÔ∏è")
    async def offerbutt(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
        self.value = True
        await inter.response.send_modal(modal=OffersModal())

    async def interaction_check(self, interaction: MessageInteraction):
        
        global offerwriter
        offerwriter = interaction.user.id

        return await super().interaction_check(interaction)

@bot.slash_command(guild_ids=[1097125882876923954])
async def offernotanon(inter):
    view = OfferButton()
    channel = bot.get_channel(int(1102629280615252029))
    button_embed = disnake.Embed(
        title="–ù–∞–ø–∏—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–π —à–∫–æ–ª—ã!",
        description='–ï—Å–ª–∏ –±–æ—Ç –≤ —Å–µ—Ç–∏, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É —à–∫–æ–ª—ã –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å" ',
        color=0x03fc6b
    )
    
    await channel.send(embed=button_embed, view = view)

@bot.slash_command(guild_ids=[1097125882876923954])
async def offeranon(inter):
    view = OfferButton()
    channelanon = bot.get_channel(int(1102629326236684338))
    button_embed = disnake.Embed(
        title="–ù–∞–ø–∏—à–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–π —à–∫–æ–ª—ã!",
        description='–ï—Å–ª–∏ –±–æ—Ç –≤ —Å–µ—Ç–∏, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É —à–∫–æ–ª—ã –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å" ',
        color=0x03fc6b
    )
    
    await channelanon.send(embed=button_embed, view = view)

@bot.slash_command(
        guild_ids=[1097125882876923954, 1102624788582760498],
        name="—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        description="–†–µ–≥–∏—Å—Ç–∞—Ä—Ü–∏—è. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ª–∏—à—å —Ä–∞–∑"
        )
@commands.has_any_role(int(1104761162945527939))
async def registration(inter: disnake.CommandInteraction, –∏–º—è: str, —Ñ–∞–º–∏–ª–∏—è: str, –∫–ª–∞—Å—Å: str):
    membernew = inter.user.id
    owner = bot.get_user(int(581348510830690344))
    newmembermention = bot.get_user(int(membernew))
    with open(r'C:\Users\meljn\OneDrive\–î–æ–∫—É–º–µ–Ω—Ç—ã\testbot\users.txt', 'a+', encoding='utf-8') as userfile:
        userfile.write(f"{–∏–º—è} {—Ñ–∞–º–∏–ª–∏—è} {–∫–ª–∞—Å—Å} {newmembermention} \n")
    await owner.send(f"{–∏–º—è} {—Ñ–∞–º–∏–ª–∏—è} {–∫–ª–∞—Å—Å} <@{membernew}> \n")
    await inter.response.send_message(f"–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, <@{membernew}>!", delete_after=5)
    userfile.close()
    role_not_authorized = inter.guild.get_role(int(1104761162945527939))
    role_authorized = inter.guild.get_role(int(1104761018124619826))
    await inter.user.remove_roles(role_not_authorized)
    await inter.user.add_roles(role_authorized)
    userfile.close()

    values = (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –∫–ª–∞—Å—Å, 0, membernew)

    with sqlite3.connect("server.db") as db:
        cursor = db.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
            in_db_user_id INTEGER PRIMARY KEY AUTOINCREMENT,
            login TEXT,
            password TEXT,
            clas TEXT,
            cash BIGINT,
            discordaccountid BIGINT
        )""")

        cursor.execute("INSERT INTO users(login, password, clas, cash, discordaccountid) VALUES (?, ?, ?, ?, ?)", values)

        db.commit()

        for value in cursor.execute("SELECT * FROM users"):
            print(value)